<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo + GitHub 搭建个人博客]]></title>
    <url>%2F2017%2F08%2F26%2FHexo-GitHub-setup-blog%2F</url>
    <content type="text"><![CDATA[安装Hexo安装Node.js在nodejs官网找到合适的安装程序，下载并安装。 安装Git在Git官网找到合适的安装程序，下载并安装。 安装Hexo1$ npm install -g hexo-cli 初始化hexo 创建hexo网站目录hexoblog cd hexoblog(下面步骤都以hexoblog为当前路径) hexo init npm install 网站配置在站点配置文件_config.yml修改基础配置。 title 网站标题 subtitle 网站副标题 description 网站描述 author 作者名字 language 网站使用的语言 安装并配置hexo主题这里以NexT主题为例。 下载NexT主题12$ cd your-hexo-site$ git clone https://github.com/iissnan/hexo-theme-next themes/next 启用NexT主题站点配置文件_config.yml里的初始theme是landscape, 修改为NexT应用新主题1theme: next 选择schemeNexT主题有多种scheme可供选择，在NexT主题配置文件_config.yml里修改scheme为你想要的scheme，本例中使用Mist。 12345# Schemes#scheme: Musescheme: Mist#scheme: Pisces#scheme: Gemini 设置菜单编辑主题配置文件，修改以下内容： menu: 此处配置不用于显示，而用于匹配图标及翻译。以#前缀的是未被启用的菜单。 12345678menu: home: / archives: /archives categories: /categories tags: /tags about: /about #sitemap: /sitemap.xml #commonweal: /404/ languages: 第一步中的名称会用于查找对应的语言翻译，并显示对应的文本。翻译文本在NexT主题目录下的 languages/{language}.yml （{language} 为你所使用的语言）。 menu_icons: 此设定格式是 item name: icon name。icon name（图标名称）可查找NexT主题目录下的 source/lib/font-awesome/css/font-awesome.css 设置语言 可设置何种语言要查看选用主题的languages配置。在themes/theme-name/languages下可查看主题支持的语言。例如：主题NexT，在themes/next/languages下的所有语言配置文件.yml。 编辑站点配置文件_config.yml里的language，设置为你需要的语言。例如设置英文，配置如下：1language: en 目前 NexT 支持的语言如以下表格所示：| Item | Value | Qty || ——– | ——— | —– || Computer | 1600 USD | 5 || Phone | 12 USD | 12 || Pipe | 1 USD | 234 | 设置头像将头像放置主题目录下的 source/uploads/ （新建 uploads 目录若不存在）配置为：avatar: /uploads/avatar.png 或者放置在 source/images/ 目录下配置为：avatar: /images/avatar.png 设置博文更新时间 在主题配置文件_config.yml中，开启更新时间。 12post_meta: updated_at: true 在博文markdown的Front-matter中添加配置updated设置时间 1234567---title: 文章标题date: 2017-08-26 20:51:55updated: 2017-08-27 10:53:00tags: [tag1,tag2,tag3]categories: cat1--- 添加分类页面 分类菜单设置，在设置菜单中已经介绍，请参考上面配置。 新建页面 12$ cd your-hexo-site$ hexo new page "categories" 设置页面类型编辑新建的页面(your-hexo-site folder/source/categories/index.md)，设置类型为categories。 12345---title: All categoriesdate: 2017-08-26 22:14:10type: "categories"--- 添加标签页面 分类菜单设置，在设置菜单中已经介绍，请参考上面配置。 新建页面 12$ cd your-hexo-site$ hexo new page "tags" 设置页面类型编辑新建的页面(your-hexo-site folder/source/tags/index.md)，设置类型为tags。 12345---title: All tagsdate: 2017-08-26 22:13:08type: "tags"--- 搜索服务Local Search 安装 hexo-generator-searchdb，在站点的根目录下执行以下命令： 1$ npm install hexo-generator-searchdb --save 编辑 站点配置文件，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 编辑主题配置文件，启用本地搜索功能： 123# Local searchlocal_search: enable: true 写文章Hexo 有三种默认布局：post、page 和 draft。post: 写的新文章，放在source/_posts文件夹下。page: 设置的新菜单页面，例如categories/tags将通过该方式创建。1$ hexo new [layout] &lt;title&gt; 文章插入图片 在source文件夹下新建images文件夹保存网站用到的图片 在文章中引用：1![](/images/LeanCloudCreateClass.jpg) 文章阅读量功能 配置LeanCloud注册LeanCloud账号，验证邮箱，登录LeanCloud账号。 创建新应用在控制台创建新应用，具体如下图所示： 创建新Class进入应用界面，在红框中输入Class名称Counter即创建成功(为了保证我们前面对NexT主题的修改兼容，此处的新建Class名字必须为Counter)。如下图： 应用Key进入左侧控制面板的”设置”，之后选择”应用Key”，即可查看创建的App ID和App Key。如下图： 将App ID和App Key配置到NexT主题配置文件_config.yml。 1234leancloud_visitors: enable: true app_id: eGjPWALsv3dgYceUvEtLNREG-gzGzoHsz app_key: AYQwRJ2HPywhtDCq9sBq2Ngj 部署网站部署网站到GitHub(具体步骤参考GitHub部署)，访问文章，就可以看到页面上显示的阅读量。如下图： LiveRe评论系统设置 注册LiveRe账号 安装City版 得到LiveRe代码，拷贝其中的data-uid在下一步骤使用 编辑主题配置文件_config.yml，修改livere_uid为LiveRe里的data-uid1livere_uid: MTAyMC8zMDQ5My83MDQ3 设置代码高亮主题NexT 使用 Tomorrow Theme 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties。编辑主题配置文件_config.yml，更改highlight_theme字段，配置你想要的高亮主题。12345#highlight_theme: normal#highlight_theme: night#highlight_theme: night blue#highlight_theme: night brighthighlight_theme: night eighties 设置背景动画 开启动画效果编辑主题配置文件_config.yml，开启use_motion。 1use_motion: true # 开启动画效果 设置背景动画NexT主题有内置的背景动画(canvas_nest, three_waves, canvas_lines, canvas_sphere, canvas_ribbon)可供选择，编辑主题配置文件_config.yml，开启你选择的动画效果。本博客使用的是canvas_nest动画。 12# Canvas-nestcanvas_nest: true 修改文章末尾的Tag图标 文章末尾默认的Tag标记是#，如下图所示： 打开themes/next/layout/_macro/post.swig，找到div class “post-tags”，默认的#代码 12345678910&lt;footer class="post-footer"&gt; &#123;% if post.tags and post.tags.length and not is_index %&#125; &lt;div class="post-tags"&gt; &#123;% for tag in post.tags %&#125; &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;# &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; &#123;% endfor %&#125; &lt;/div&gt; &#123;% endif %&#125; ...&lt;/footer&gt; 修改为： 12345678910&lt;footer class="post-footer"&gt; &#123;% if post.tags and post.tags.length and not is_index %&#125; &lt;div class="post-tags"&gt; &#123;% for tag in post.tags %&#125; &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tag"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; &#123;% endfor %&#125; &lt;/div&gt; &#123;% endif %&#125; ...&lt;/footer&gt; 修改后效果图： 预览本地静态博客 安装hexo-server 1$ npm install hexo-server --save 用以下命令开启服务器。网站会在http://localhost:4000 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。 1$ hexo server GitHub部署在本地预览博客效果ok，就可以部署到GitHub上了。 GitHub创建个人仓库 注册GitHub账号 登录GitHub，在主页点击Start a project或者New repository新建个人仓库，比如仓库名为gracezhong.github.io。 安装 hexo-deployer-git 1$ npm install hexo-deployer-git --save 在站点配置文件_config.yml 中修改参数，GitHub对应的类型为git。repo参数填写你博客个人仓库(Repository)的地址。 1234deploy: type: git repo: https://github.com/gracezhong/gracezhong.github.io.git brach: master 执行以下命令发布 1$ hexo deploy 访问GitHub博客部署完成之后访问 https://gracezhong.github.io/ ，就能看到博客显示成功。 参考文章 Hexo官档 主题NexT参考资料 GitHub+Hexo搭建个人网站教程 配置LeanCloud Hexo搭建博客教程]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
</search>
